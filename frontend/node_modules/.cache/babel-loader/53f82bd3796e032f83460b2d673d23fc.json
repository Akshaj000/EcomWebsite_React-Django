{"ast":null,"code":"var _jsxFileName = \"/mnt/1660E61660E5FC7D/AK360/REACT/Ecom/frontend/src/context/CategoryContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { rooturl } from \"../utils/functions\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CategoryContext = /*#__PURE__*/createContext();\nexport default CategoryContext;\nexport const CategoryProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  let [categories, setCategories] = useState([1, 3]);\n  let [isFetched, setIsFetched] = useState(true);\n  let Navigate = useNavigate();\n\n  let fetchCategories = () => {\n    let token = JSON.parse(localStorage.getItem('authToken')) ? JSON.parse(localStorage.getItem('authToken')).access : null;\n\n    if (token) {\n      axios.get(rooturl + '/api/category-list/', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(res => {\n        let data = res.data;\n        setCategories(data);\n      });\n\n      if (isFetched) {\n        setIsFetched(false);\n      }\n    }\n  };\n\n  let editCategories = (id, value) => {\n    let token = JSON.parse(localStorage.getItem('authToken')).access;\n    axios.post(rooturl + '/api/category-update/' + id + \"/\", {\n      categoryname: value\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(function (response) {\n      fetchCategories();\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  let deleteCategory = id => {};\n\n  let addCategories = value => {\n    console.log(value);\n    let token = JSON.parse(localStorage.getItem('authToken')).access;\n    axios.post(rooturl + '/api/category-add/', {\n      categoryname: value\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(function (response) {\n      fetchCategories();\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  let contextData = {\n    categories: categories,\n    editCategories: editCategories,\n    addCategories: addCategories\n  };\n  useEffect(() => {\n    if (isFetched) {\n      fetchCategories();\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(CategoryContext.Provider, {\n    value: contextData,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CategoryProvider, \"c4J9WEOxacWFrthzNSOfioW5Qrk=\", false, function () {\n  return [useNavigate];\n});\n\n_c = CategoryProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoryProvider\");","map":{"version":3,"sources":["/mnt/1660E61660E5FC7D/AK360/REACT/Ecom/frontend/src/context/CategoryContext.js"],"names":["createContext","useState","useEffect","axios","rooturl","useNavigate","CategoryContext","CategoryProvider","children","categories","setCategories","isFetched","setIsFetched","Navigate","fetchCategories","token","JSON","parse","localStorage","getItem","access","get","headers","Authorization","then","res","data","editCategories","id","value","post","categoryname","response","catch","error","console","log","deleteCategory","addCategories","contextData"],"mappings":"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","sourcesContent":["import { \ncreateContext,     \nuseState,\nuseEffect } from \"react\";\nimport axios from 'axios';\nimport { rooturl } from \"../utils/functions\";\nimport { useNavigate } from \"react-router-dom\";\nconst CategoryContext = createContext()\nexport default CategoryContext;\n\n\nexport  const CategoryProvider = ({children}) => {\n\n    let [categories,setCategories] = useState([1,3])\n    let [isFetched,setIsFetched]= useState(true)\n    let Navigate = useNavigate()\n\n    let fetchCategories=()=>{\n        let token = JSON.parse(localStorage.getItem('authToken')) ? JSON.parse(localStorage.getItem('authToken')).access  : null\n        if (token){\n            axios.get(rooturl+'/api/category-list/',\n            {headers:{\n                Authorization  :  `Bearer ${token}`\n            }})\n            .then(res => {\n                let data = res.data;\n                setCategories(data)\n            })\n            if(isFetched){\n                setIsFetched(false)\n            } \n        }\n    }\n\n    let editCategories=(id,value)=>{\n        let token = JSON.parse(localStorage.getItem('authToken')).access\n        axios.post(rooturl + '/api/category-update/' + id + \"/\", {\n            categoryname :  value\n        }, {\n            headers: {\n\n                Authorization: `Bearer ${token}`\n            }\n        })\n        .then(function(response) {\n            fetchCategories()\n        })\n        .catch(function(error) {\n            console.log(error)\n        });\n    }\n\n    let deleteCategory=(id)=>{\n        \n    }\n\n    let addCategories=(value)=>{\n        console.log(value)\n        let token = JSON.parse(localStorage.getItem('authToken')).access\n        axios.post(rooturl + '/api/category-add/', {\n            categoryname :  value\n        }, {\n            headers: {\n                Authorization: `Bearer ${token}`\n            }\n        })\n        .then(function(response) {\n            fetchCategories()\n        })\n        .catch(function(error) {\n            console.log(error)\n        });\n    }\n\n\n    let contextData ={\n        categories:categories,\n        editCategories:editCategories,\n        addCategories:addCategories\n    }\n\n    useEffect(() => {\n        if(isFetched){\n          fetchCategories()\n        }\n    })\n\n\n    return(\n        <CategoryContext.Provider value={contextData}>\n            {children}\n        </CategoryContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}