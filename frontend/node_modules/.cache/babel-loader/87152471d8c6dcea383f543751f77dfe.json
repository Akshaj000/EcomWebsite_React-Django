{"ast":null,"code":"var _jsxFileName = \"/mnt/1660E61660E5FC7D/AK360/REACT/Ecom/frontend/src/context/CartContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport CartListCard from '../components/cartCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport default CartContext;\nexport const CartProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  let rooturl = \"http://localhost:8000/\";\n  let [cartList, setCartList] = useState([]);\n  let [isFetched, setIsFetched] = useState(true);\n  let [product, setProduct] = useState([]);\n  let [cartDetail, setCartDetai] = useState([]);\n\n  let fetchCart = () => {\n    let token = JSON.parse(localStorage.getItem('authToken')).access;\n    let data;\n    axios.get(rooturl + 'api/cart-list/', {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + String(token)\n      }\n    }).then(res => {\n      data = res.data;\n      setCartList(data);\n    }).catch(err => {\n      console.log(err);\n    });\n\n    if (isFetched) {\n      setIsFetched(false);\n    }\n  };\n\n  let findDetails = id => {};\n\n  useEffect(() => {\n    console.log(\"out\");\n\n    if (isFetched) {\n      console.log(\"in\");\n      fetchCart();\n\n      if (cartList.length > 0) {\n        console.log(cartList);\n        let cards = [];\n\n        for (let i = 0; i < cartList.length; i++) {\n          let data;\n          axios.get(rooturl + 'api/product-detail/' + id + \"/\").then(res => {\n            data = res.data;\n            setProduct({\n              product: data\n            });\n          });\n          let thisproduct = product;\n          console.log(thisproduct);\n          cards.push( /*#__PURE__*/_jsxDEV(CartListCard, {\n            to: \"/product/\" + cartList[i].product + \"/\",\n            image: rooturl + product.image,\n            name: product.name,\n            price: product.price,\n            quantity: cartList[i].count,\n            totalprice: \"{product.price*cartList[i].count}\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this));\n        }\n      } else {\n        setIsFetched(true);\n      }\n    }\n  });\n  let contextData = {\n    cartList: cartList\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: contextData,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartProvider, \"/e/11T7SFvcKI3cXmeR+B5qcY9U=\");\n\n_c = CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/mnt/1660E61660E5FC7D/AK360/REACT/Ecom/frontend/src/context/CartContext.js"],"names":["createContext","useState","useEffect","axios","CartListCard","CartContext","CartProvider","children","rooturl","cartList","setCartList","isFetched","setIsFetched","product","setProduct","cartDetail","setCartDetai","fetchCart","token","JSON","parse","localStorage","getItem","access","data","get","headers","String","then","res","catch","err","console","log","findDetails","id","length","cards","i","thisproduct","push","image","name","price","count","contextData"],"mappings":"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","sourcesContent":["import { \ncreateContext,     \nuseState,\nuseEffect } from \"react\";\nimport axios from 'axios';\nimport CartListCard from '../components/cartCard'\n\n\nconst CartContext = createContext()\nexport default CartContext;\n\nexport  const CartProvider = ({children}) => {\n\n    let rooturl = \"http://localhost:8000/\"\n    let [cartList,setCartList] = useState([])\n    let [isFetched,setIsFetched]= useState(true)\n    let [product,setProduct]=useState([])\n    let [cartDetail,setCartDetai]=useState([])\n    \n\n    let fetchCart=()=>{\n        let token = JSON.parse(localStorage.getItem('authToken')).access\n        let data ;\n        axios.get(rooturl+'api/cart-list/',\n        {\n            headers: {\n              'Content-Type' : 'application/json',\n              'Authorization': 'Bearer '+String(token)\n            }\n        })\n        .then(res => {\n            data = res.data;\n            setCartList(data)\n        })\n        .catch(err => {\n            console.log(err)\n        })\n        if (isFetched){\n            setIsFetched(false)\n        }\n    }\n\n    let findDetails=(id)=>{\n        \n    }\n\n\n    useEffect(()=>{\n        console.log(\"out\")\n        if (isFetched){\n            console.log(\"in\")\n            fetchCart()\n            if(cartList.length>0){\n                console.log(cartList)\n                let cards  = []\n                for(let i=0;i<cartList.length;i++){\n                    let data;\n                    axios.get(rooturl+'api/product-detail/'+id+\"/\")\n                    .then(res => {\n                    data = res.data;\n                    setProduct({product:data})\n                    })\n                    let thisproduct = product\n                    console.log(thisproduct)\n                    cards.push(\n                        <CartListCard \n                            to={\"/product/\"+cartList[i].product+\"/\"} \n                            image={rooturl+product.image} \n                            name={product.name} \n                            price={product.price} \n                            quantity={cartList[i].count}\n                            totalprice=\"{product.price*cartList[i].count}\"\n                        />\n                    );\n                }\n            }\n            else{\n              setIsFetched(true)\n            }\n        }\n        \n        \n    })\n\n    let contextData ={\n        cartList:cartList,\n    }\n\n\n    return(\n        <CartContext.Provider value={contextData}>\n            {children}\n        </CartContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}