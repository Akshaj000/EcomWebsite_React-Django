{"ast":null,"code":"var _jsxFileName = \"/mnt/1660E61660E5FC7D/AK360/REACT/Ecom/frontend/src/context/CartContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect, useContext } from \"react\";\nimport axios from 'axios';\nimport ProductContext from \"./ProductContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport default CartContext;\nexport const CartProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  let rooturl = \"http://localhost:8000\";\n  let [CartList, setCartList] = useState([]);\n  let [isFetched, setIsFetched] = useState(true);\n  let {\n    productList\n  } = useContext(ProductContext);\n\n  let fetchCarts = () => {\n    let Token = JSON.parse(localStorage.getItem('authToken')).access;\n    console.log(Token);\n    let data;\n    axios.get(rooturl + '/api/Cart-list/', {\n      headers: {\n        'Authorizatiom': `Bearer`\n      }\n    }).then(res => {\n      data = res.data;\n      setCartList(data);\n    }).catch(err => {\n      console.log(err);\n    });\n\n    if (isFetched) {\n      setIsFetched(false);\n    }\n  };\n\n  useEffect(() => {\n    if (isFetched) {\n      fetchCarts();\n    }\n\n    let interval = setInterval(() => {\n      fetchCarts();\n    }, 10000);\n    return () => clearInterval(interval);\n  });\n  let contextData = {\n    CartList: CartList\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: contextData,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartProvider, \"HdEhqMqX36vjdDHroNpfAkjFyFs=\");\n\n_c = CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/mnt/1660E61660E5FC7D/AK360/REACT/Ecom/frontend/src/context/CartContext.js"],"names":["createContext","useState","useEffect","useContext","axios","ProductContext","CartContext","CartProvider","children","rooturl","CartList","setCartList","isFetched","setIsFetched","productList","fetchCarts","Token","JSON","parse","localStorage","getItem","access","console","log","data","get","headers","then","res","catch","err","interval","setInterval","clearInterval","contextData"],"mappings":";;;AAAA,SACAA,aADA,EAEAC,QAFA,EAGAC,SAHA,EAIAC,UAJA,QAIkB,OAJlB;AAKA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,MAAMC,WAAW,gBAAGN,aAAa,EAAjC;AACA,eAAeM,WAAf;AAEA,OAAQ,MAAMC,YAAY,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AAEzC,MAAIC,OAAO,GAAG,uBAAd;AACA,MAAI,CAACC,QAAD,EAAUC,WAAV,IAAyBV,QAAQ,CAAC,EAAD,CAArC;AACA,MAAI,CAACW,SAAD,EAAWC,YAAX,IAA0BZ,QAAQ,CAAC,IAAD,CAAtC;AACA,MAAI;AAACa,IAAAA;AAAD,MAAgBX,UAAU,CAACE,cAAD,CAA9B;;AAGA,MAAIU,UAAU,GAAC,MAAI;AACf,QAAIC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,EAA8CC,MAA1D;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACA,QAAIQ,IAAJ;AACApB,IAAAA,KAAK,CAACqB,GAAN,CAAUhB,OAAO,GAAC,iBAAlB,EAAoC;AAChCiB,MAAAA,OAAO,EAAC;AACJ,yBAAiB;AADb;AADwB,KAApC,EAKCC,IALD,CAKMC,GAAG,IAAI;AACTJ,MAAAA,IAAI,GAAGI,GAAG,CAACJ,IAAX;AACAb,MAAAA,WAAW,CAACa,IAAD,CAAX;AACH,KARD,EASCK,KATD,CASOC,GAAG,IAAI;AACVR,MAAAA,OAAO,CAACC,GAAR,CAAYO,GAAZ;AACH,KAXD;;AAYA,QAAGlB,SAAH,EAAa;AACTC,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;AACJ,GAnBD;;AAsBAX,EAAAA,SAAS,CAAC,MAAI;AACV,QAAGU,SAAH,EAAa;AACTG,MAAAA,UAAU;AACb;;AACD,QAAIgB,QAAQ,GAAGC,WAAW,CAAC,MAAM;AAC7BjB,MAAAA,UAAU;AACb,KAFyB,EAExB,KAFwB,CAA1B;AAGA,WAAO,MAAIkB,aAAa,CAACF,QAAD,CAAxB;AACH,GARQ,CAAT;AAUA,MAAIG,WAAW,GAAE;AACbxB,IAAAA,QAAQ,EAACA;AADI,GAAjB;AAKA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEwB,WAA7B;AAAA,cACK1B;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAlDO;;GAAMD,Y;;KAAAA,Y","sourcesContent":["import { \ncreateContext,     \nuseState,\nuseEffect,\nuseContext } from \"react\";\nimport axios from 'axios';\nimport ProductContext from \"./ProductContext\";\n\nconst CartContext = createContext()\nexport default CartContext;\n\nexport  const CartProvider = ({children}) => {\n\n    let rooturl = \"http://localhost:8000\"\n    let [CartList,setCartList] = useState([])\n    let [isFetched,setIsFetched]= useState(true)\n    let {productList} = useContext(ProductContext)\n\n\n    let fetchCarts=()=>{\n        let Token = JSON.parse(localStorage.getItem('authToken')).access\n        console.log(Token)\n        let data ;\n        axios.get(rooturl+'/api/Cart-list/',{\n            headers:{\n                'Authorizatiom':`Bearer`\n            }\n        })\n        .then(res => {\n            data = res.data;\n            setCartList(data)\n        })\n        .catch(err => {\n            console.log(err)\n        })\n        if(isFetched){\n            setIsFetched(false)\n        }\n    }\n\n\n    useEffect(()=>{\n        if(isFetched){\n            fetchCarts()\n        }\n        let interval = setInterval(() => {\n            fetchCarts()\n        },10000)\n        return ()=>clearInterval(interval)\n    })\n\n    let contextData ={\n        CartList:CartList,\n    }\n\n\n    return(\n        <CartContext.Provider value={contextData}>\n            {children}\n        </CartContext.Provider>\n    )\n}\n    \n    "]},"metadata":{},"sourceType":"module"}