{"ast":null,"code":"var _jsxFileName = \"/mnt/1660E61660E5FC7D/AK360/REACT/Ecom/frontend/src/context/CategoryContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { rooturl } from \"../utils/functions\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CategoryContext = /*#__PURE__*/createContext();\nexport default CategoryContext;\nexport const CategoryProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  let [categories, setCategories] = useState([1, 3]);\n  let [isFetched, setIsFetched] = useState(true);\n  let Navigate = useNavigate();\n\n  let fetchCategories = () => {\n    let token = JSON.parse(localStorage.getItem('authToken')) ? JSON.parse(localStorage.getItem('authToken')).access : null;\n\n    if (token) {\n      axios.get(rooturl + '/api/category-list/', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(res => {\n        let data = res.data;\n        setCategories(data);\n      });\n\n      if (isFetched) {\n        setIsFetched(false);\n      }\n    }\n  };\n\n  let editCategories = () => {\n    axios.post(rooturl + '/api/customer-update/', {\n      name: e.target.name.value,\n      email: e.target.email.value,\n      phone: e.target.phone.value,\n      country: e.target.country.value,\n      state: e.target.state.value,\n      district: e.target.district.value,\n      address: e.target.address.value,\n      postalcode: e.target.postalcode.value\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(function (response) {\n      document.getElementById(\"profileform\").style.display = \"none\";\n      document.getElementById(\"savedprofilecontent\").style.display = \"block\";\n    }).catch(function (error) {\n      alert(error);\n    });\n  };\n\n  let contextData = {\n    categories: categories,\n    fetchCategories: fetchCategories\n  };\n  useEffect(() => {\n    if (isFetched) {\n      fetchCategories();\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(CategoryContext.Provider, {\n    value: contextData,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CategoryProvider, \"c4J9WEOxacWFrthzNSOfioW5Qrk=\", false, function () {\n  return [useNavigate];\n});\n\n_c = CategoryProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoryProvider\");","map":{"version":3,"sources":["/mnt/1660E61660E5FC7D/AK360/REACT/Ecom/frontend/src/context/CategoryContext.js"],"names":["createContext","useState","useEffect","axios","rooturl","useNavigate","CategoryContext","CategoryProvider","children","categories","setCategories","isFetched","setIsFetched","Navigate","fetchCategories","token","JSON","parse","localStorage","getItem","access","get","headers","Authorization","then","res","data","editCategories","post","name","e","target","value","email","phone","country","state","district","address","postalcode","response","document","getElementById","style","display","catch","error","alert","contextData"],"mappings":"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","sourcesContent":["import { \ncreateContext,     \nuseState,\nuseEffect } from \"react\";\nimport axios from 'axios';\nimport { rooturl } from \"../utils/functions\";\nimport { useNavigate } from \"react-router-dom\";\nconst CategoryContext = createContext()\nexport default CategoryContext;\n\n\nexport  const CategoryProvider = ({children}) => {\n\n    let [categories,setCategories] = useState([1,3])\n    let [isFetched,setIsFetched]= useState(true)\n    let Navigate = useNavigate()\n\n    let fetchCategories=()=>{\n        let token = JSON.parse(localStorage.getItem('authToken')) ? JSON.parse(localStorage.getItem('authToken')).access  : null\n        if (token){\n            axios.get(rooturl+'/api/category-list/',\n            {headers:{\n                Authorization  :  `Bearer ${token}`\n            }})\n            .then(res => {\n                let data = res.data;\n                setCategories(data)\n            })\n            if(isFetched){\n                setIsFetched(false)\n            } \n        }\n    }\n\n    let editCategories=()=>{\n        axios.post(rooturl+'/api/customer-update/', {\n            name: e.target.name.value,\n            email: e.target.email.value,\n            phone: e.target.phone.value,\n            country : e.target.country.value,\n            state : e.target.state.value,\n            district : e.target.district.value,\n            address : e.target.address.value,\n            postalcode : e.target.postalcode.value\n        },\n        {headers:{\n          Authorization  :  `Bearer ${token}`\n        }})\n        .then(function (response) {\n          document.getElementById(\"profileform\").style.display = \"none\";\n          document.getElementById(\"savedprofilecontent\").style.display=\"block\";\n        })\n        .catch(function (error) {\n          alert(error)\n        });\n    }\n\n\n    let contextData ={\n        categories:categories,\n        fetchCategories:fetchCategories\n    }\n\n    useEffect(() => {\n        if(isFetched){\n          fetchCategories()\n        }\n    })\n\n\n    return(\n        <CategoryContext.Provider value={contextData}>\n            {children}\n        </CategoryContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}