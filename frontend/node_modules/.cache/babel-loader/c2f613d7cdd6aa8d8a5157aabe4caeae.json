{"ast":null,"code":"var _jsxFileName = \"/mnt/1660E61660E5FC7D/AK360/REACT/Ecom/frontend/src/context/CartContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport CartListCard from '../components/cartCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport default CartContext;\nexport const CartProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  let rooturl = \"http://localhost:8000/\";\n  let [cartList, setCartList] = useState([]);\n  let [isFetched, setIsFetched] = useState(true);\n  let [product, setProduct] = useState([]);\n\n  let fetchCart = () => {\n    let token = JSON.parse(localStorage.getItem('authToken')).access;\n    let data;\n    axios.get(rooturl + 'api/cart-list/', {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + String(token)\n      }\n    }).then(res => {\n      data = res.data;\n      setCartList(data);\n    }).catch(err => {\n      console.log(err);\n    });\n\n    if (isFetched) {\n      setIsFetched(false);\n    }\n  };\n\n  let findDetails = id => {\n    let data;\n    axios.get(rooturl + 'api/product-detail/' + id + \"/\").then(res => {\n      data = res.data;\n      setProduct({\n        product: data\n      });\n    });\n  };\n\n  useEffect(() => {\n    if (isFetched) {\n      fetchCart();\n      let cards = [];\n\n      for (let i = 0; i < cartList.length; i++) {\n        findDetails(cartList[i].product);\n        let thisproduct = product;\n        cards.push( /*#__PURE__*/_jsxDEV(CartListCard, {\n          to: \"/product/\" + cartList[i].product + \"/\",\n          image: rooturl + product.image,\n          name: product.name,\n          price: product.price,\n          quantity: cartList[i].count,\n          totalprice: \"{product.price*cartList[i].count}\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this));\n      }\n    }\n  });\n  let contextData = {\n    cartList: cartList\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: contextData,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartProvider, \"KRG3xOZj3exw4q4O3vC6tA+17+g=\");\n\n_c = CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/mnt/1660E61660E5FC7D/AK360/REACT/Ecom/frontend/src/context/CartContext.js"],"names":["createContext","useState","useEffect","axios","CartListCard","CartContext","CartProvider","children","rooturl","cartList","setCartList","isFetched","setIsFetched","product","setProduct","fetchCart","token","JSON","parse","localStorage","getItem","access","data","get","headers","String","then","res","catch","err","console","log","findDetails","id","cards","i","length","thisproduct","push","image","name","price","count","contextData"],"mappings":";;;AAAA,SACAA,aADA,EAEAC,QAFA,EAGAC,SAHA,QAGiB,OAHjB;AAIA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;;AAGA,MAAMC,WAAW,gBAAGL,aAAa,EAAjC;AACA,eAAeK,WAAf;AAEA,OAAQ,MAAMC,YAAY,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AAEzC,MAAIC,OAAO,GAAG,wBAAd;AACA,MAAI,CAACC,QAAD,EAAUC,WAAV,IAAyBT,QAAQ,CAAC,EAAD,CAArC;AACA,MAAI,CAACU,SAAD,EAAWC,YAAX,IAA0BX,QAAQ,CAAC,IAAD,CAAtC;AACA,MAAI,CAACY,OAAD,EAASC,UAAT,IAAqBb,QAAQ,CAAC,EAAD,CAAjC;;AAGA,MAAIc,SAAS,GAAC,MAAI;AACd,QAAIC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,EAA8CC,MAA1D;AACA,QAAIC,IAAJ;AACAnB,IAAAA,KAAK,CAACoB,GAAN,CAAUf,OAAO,GAAC,gBAAlB,EACA;AACIgB,MAAAA,OAAO,EAAE;AACP,wBAAiB,kBADV;AAEP,yBAAiB,YAAUC,MAAM,CAACT,KAAD;AAF1B;AADb,KADA,EAOCU,IAPD,CAOMC,GAAG,IAAI;AACTL,MAAAA,IAAI,GAAGK,GAAG,CAACL,IAAX;AACAZ,MAAAA,WAAW,CAACY,IAAD,CAAX;AACH,KAVD,EAWCM,KAXD,CAWOC,GAAG,IAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KAbD;;AAcA,QAAIlB,SAAJ,EAAc;AACVC,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;AACJ,GApBD;;AAsBA,MAAIoB,WAAW,GAAEC,EAAD,IAAM;AAClB,QAAIX,IAAJ;AACAnB,IAAAA,KAAK,CAACoB,GAAN,CAAUf,OAAO,GAAC,qBAAR,GAA8ByB,EAA9B,GAAiC,GAA3C,EACCP,IADD,CACMC,GAAG,IAAI;AACbL,MAAAA,IAAI,GAAGK,GAAG,CAACL,IAAX;AACAR,MAAAA,UAAU,CAAC;AAACD,QAAAA,OAAO,EAACS;AAAT,OAAD,CAAV;AACC,KAJD;AAKH,GAPD;;AAUApB,EAAAA,SAAS,CAAC,MAAI;AACV,QAAIS,SAAJ,EAAc;AACVI,MAAAA,SAAS;AACT,UAAImB,KAAK,GAAI,EAAb;;AACA,WAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC1B,QAAQ,CAAC2B,MAAvB,EAA8BD,CAAC,EAA/B,EAAkC;AAC9BH,QAAAA,WAAW,CAACvB,QAAQ,CAAC0B,CAAD,CAAR,CAAYtB,OAAb,CAAX;AACA,YAAIwB,WAAW,GAAGxB,OAAlB;AACAqB,QAAAA,KAAK,CAACI,IAAN,eACI,QAAC,YAAD;AACI,UAAA,EAAE,EAAE,cAAY7B,QAAQ,CAAC0B,CAAD,CAAR,CAAYtB,OAAxB,GAAgC,GADxC;AAEI,UAAA,KAAK,EAAEL,OAAO,GAACK,OAAO,CAAC0B,KAF3B;AAGI,UAAA,IAAI,EAAE1B,OAAO,CAAC2B,IAHlB;AAII,UAAA,KAAK,EAAE3B,OAAO,CAAC4B,KAJnB;AAKI,UAAA,QAAQ,EAAEhC,QAAQ,CAAC0B,CAAD,CAAR,CAAYO,KAL1B;AAMI,UAAA,UAAU,EAAC;AANf;AAAA;AAAA;AAAA;AAAA,gBADJ;AAUH;AACJ;AAEJ,GApBQ,CAAT;AAsBA,MAAIC,WAAW,GAAE;AACblC,IAAAA,QAAQ,EAACA;AADI,GAAjB;AAKA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEkC,WAA7B;AAAA,cACKpC;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAxEO;;GAAMD,Y;;KAAAA,Y","sourcesContent":["import { \ncreateContext,     \nuseState,\nuseEffect } from \"react\";\nimport axios from 'axios';\nimport CartListCard from '../components/cartCard'\n\n\nconst CartContext = createContext()\nexport default CartContext;\n\nexport  const CartProvider = ({children}) => {\n\n    let rooturl = \"http://localhost:8000/\"\n    let [cartList,setCartList] = useState([])\n    let [isFetched,setIsFetched]= useState(true)\n    let [product,setProduct]=useState([])\n    \n\n    let fetchCart=()=>{\n        let token = JSON.parse(localStorage.getItem('authToken')).access\n        let data ;\n        axios.get(rooturl+'api/cart-list/',\n        {\n            headers: {\n              'Content-Type' : 'application/json',\n              'Authorization': 'Bearer '+String(token)\n            }\n        })\n        .then(res => {\n            data = res.data;\n            setCartList(data)\n        })\n        .catch(err => {\n            console.log(err)\n        })\n        if (isFetched){\n            setIsFetched(false)\n        }\n    }\n\n    let findDetails=(id)=>{\n        let data;\n        axios.get(rooturl+'api/product-detail/'+id+\"/\")\n        .then(res => {\n        data = res.data;\n        setProduct({product:data})\n        })\n    }\n\n\n    useEffect(()=>{\n        if (isFetched){\n            fetchCart()\n            let cards  = []\n            for(let i=0;i<cartList.length;i++){\n                findDetails(cartList[i].product) \n                let thisproduct = product\n                cards.push(\n                    <CartListCard \n                        to={\"/product/\"+cartList[i].product+\"/\"} \n                        image={rooturl+product.image} \n                        name={product.name} \n                        price={product.price} \n                        quantity={cartList[i].count}\n                        totalprice=\"{product.price*cartList[i].count}\"\n                    />\n                );\n            }\n        }\n        \n    })\n\n    let contextData ={\n        cartList:cartList,\n    }\n\n\n    return(\n        <CartContext.Provider value={contextData}>\n            {children}\n        </CartContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}