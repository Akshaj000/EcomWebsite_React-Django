{"ast":null,"code":"var _jsxFileName = \"/mnt/1660E61660E5FC7D/AK360/REACT/Ecom/frontend/src/context/OrderContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect, useContext } from \"react\";\nimport axios from 'axios';\nimport { rooturl } from \"../utils/functions\";\nimport { removecart } from \"../utils/functions\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OrderContext = /*#__PURE__*/createContext();\nexport default OrderContext;\nexport const OrderProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  let [orderList, setOrderList] = useState([]);\n  let [isFetched, setIsFetched] = useState(true);\n  let [thisOrder, setThisOrder] = useState();\n  let navigate = useNavigate();\n\n  let fetchOrder = () => {\n    let Token = JSON.parse(localStorage.getItem('authToken')).access;\n    let data;\n    axios.get(rooturl + '/api/order-list/', {\n      headers: {\n        'Authorization': `Bearer ${Token}`\n      }\n    }).then(res => {\n      data = res.data;\n      setOrderList(data);\n    }).catch(err => {\n      console.log(err);\n    });\n\n    if (isFetched) {\n      setIsFetched(false);\n    }\n  };\n\n  let addOrder = (cart, bool) => {\n    for (let i = 0; i < cart.length; i++) {\n      let data;\n      axios.get(rooturl + '/api/product-detail/' + cart[i].product + \"/\").then(res => {\n        data = res.data;\n        let product = cart[i].product;\n        let totalprice = (parseFloat(data.price) * parseFloat(cart[i].count)).toFixed(2);\n        let count = cart[i].count;\n        let payment_status = bool;\n        let status = \"Pending\"; //console.log(i,product,totalprice,count,payment_status,status)\n\n        let Token = JSON.parse(localStorage.getItem('authToken')).access;\n        axios.post(rooturl + '/api/order-add/', {\n          product: product,\n          totalprice: totalprice,\n          count: count,\n          payment_status: payment_status,\n          status: status\n        }, {\n          headers: {\n            'Authorization': `Bearer ${Token}`\n          }\n        }).then(res => {\n          removecart(product);\n          nav;\n        });\n      });\n    }\n  };\n\n  let contextData = {\n    orderList: orderList,\n    setIsFetched: setIsFetched,\n    fetchOrder: fetchOrder,\n    setThisOrder: setThisOrder,\n    thisOrder: thisOrder,\n    addOrder: addOrder\n  };\n  useEffect(() => {\n    if (isFetched) {\n      fetchOrder();\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(OrderContext.Provider, {\n    value: contextData,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n};\n\n_s(OrderProvider, \"0NzAu7FyEuF48vh8ukNjVNMlGKA=\", false, function () {\n  return [useNavigate];\n});\n\n_c = OrderProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderProvider\");","map":{"version":3,"sources":["/mnt/1660E61660E5FC7D/AK360/REACT/Ecom/frontend/src/context/OrderContext.js"],"names":["createContext","useState","useEffect","useContext","axios","rooturl","removecart","useNavigate","OrderContext","OrderProvider","children","orderList","setOrderList","isFetched","setIsFetched","thisOrder","setThisOrder","navigate","fetchOrder","Token","JSON","parse","localStorage","getItem","access","data","get","headers","then","res","catch","err","console","log","addOrder","cart","bool","i","length","product","totalprice","parseFloat","price","count","toFixed","payment_status","status","post","nav","contextData"],"mappings":"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","sourcesContent":["import { \ncreateContext,     \nuseState,\nuseEffect,\nuseContext } from \"react\";\nimport axios from 'axios';\nimport { rooturl } from \"../utils/functions\";\nimport { removecart } from \"../utils/functions\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst OrderContext = createContext()\nexport default OrderContext;\n\nexport  const OrderProvider = ({children}) => {\n\n    let [orderList,setOrderList] = useState([])\n    let [isFetched,setIsFetched]= useState(true)\n    let [thisOrder,setThisOrder] = useState()\n\n    let navigate = useNavigate()\n\n    let fetchOrder=()=>{\n        let Token = JSON.parse(localStorage.getItem('authToken')).access\n        let data ;\n        axios.get(rooturl+'/api/order-list/',{\n            headers:{\n                'Authorization':`Bearer ${Token}`\n            }\n        })\n        .then(res => {\n            data = res.data;\n            setOrderList(data)\n        })\n        .catch(err => {\n            console.log(err)\n        })\n        if(isFetched){\n            setIsFetched(false)\n        }\n    }\n\n    let addOrder=(cart,bool)=>{\n        for(let i=0;i<cart.length;i++){\n            let data;\n            axios.get(rooturl+'/api/product-detail/'+cart[i].product+\"/\")\n            .then(res => {\n                data = res.data\n                let product = cart[i].product\n                let totalprice = (parseFloat(data.price)*parseFloat(cart[i].count)).toFixed(2)\n                let count  = cart[i].count\n                let payment_status =  bool\n                let status = \"Pending\"\n                //console.log(i,product,totalprice,count,payment_status,status)\n                let Token = JSON.parse(localStorage.getItem('authToken')).access\n                axios.post(rooturl+'/api/order-add/',{\n                    product : product,\n                    totalprice : totalprice,\n                    count : count,\n                    payment_status : payment_status,\n                    status : status\n                },{\n                    headers:{\n                        'Authorization':`Bearer ${Token}`\n                    }\n                }).then(res=>{\n                    removecart(product)\n                    nav\n                })\n\n            })\n        }\n\n    }\n\n    let contextData ={\n        orderList:orderList,\n        setIsFetched:setIsFetched,\n        fetchOrder:fetchOrder,\n        setThisOrder:setThisOrder,\n        thisOrder:thisOrder,\n        addOrder:addOrder\n        \n    }\n\n    useEffect(()=>{\n        if(isFetched){\n            fetchOrder()\n        }\n\n    })\n\n\n    return(\n        <OrderContext.Provider value={contextData}>\n            {children}\n        </OrderContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}