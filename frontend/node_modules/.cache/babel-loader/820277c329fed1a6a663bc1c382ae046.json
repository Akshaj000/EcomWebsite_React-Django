{"ast":null,"code":"var _jsxFileName = \"/mnt/1660E61660E5FC7D/AK360/REACT/Ecom/frontend/src/context/ProductContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductContext = /*#__PURE__*/createContext();\nexport default ProductContext;\nexport const ProductProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  let rooturl = \"http://localhost:8000\";\n  let [productList, setProductList] = useState([]);\n  let [isFetched, setIsFetched] = useState(true);\n\n  let fetchProducts = () => {\n    let data;\n    axios.get(rooturl + '/api/product-list/').then(res => {\n      data = res.data;\n      setProductList(data);\n    }).catch(err => {\n      console.log(err);\n    });\n\n    if (isFetched) {\n      setIsFetched(false);\n    }\n  };\n\n  let Edit = e => {\n    let name = e.target.name.value;\n    let image = e.target.image.value;\n    let description = e.target.description.value;\n    let price = e.target.price.value;\n    let categories = e.target.category.value;\n    alert(name);\n    console.log(name, image, description, price, categories);\n    navigate(\"/cart\");\n  };\n\n  useEffect(() => {\n    if (isFetched) {\n      fetchProducts();\n    }\n  });\n  let contextData = {\n    productList: productList\n  };\n  return /*#__PURE__*/_jsxDEV(ProductContext.Provider, {\n    value: contextData,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProductProvider, \"rpHrbe2Z+y5V5MqfkTKQU5pkobI=\");\n\n_c = ProductProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductProvider\");","map":{"version":3,"sources":["/mnt/1660E61660E5FC7D/AK360/REACT/Ecom/frontend/src/context/ProductContext.js"],"names":["createContext","useState","useEffect","axios","ProductContext","ProductProvider","children","rooturl","productList","setProductList","isFetched","setIsFetched","fetchProducts","data","get","then","res","catch","err","console","log","Edit","e","name","target","value","image","description","price","categories","category","alert","navigate","contextData"],"mappings":";;;AAAA,SACAA,aADA,EAEAC,QAFA,EAGAC,SAHA,QAGiB,OAHjB;AAIA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,cAAc,gBAAGJ,aAAa,EAApC;AACA,eAAeI,cAAf;AAEA,OAAQ,MAAMC,eAAe,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AAE5C,MAAIC,OAAO,GAAG,uBAAd;AACA,MAAI,CAACC,WAAD,EAAaC,cAAb,IAA+BR,QAAQ,CAAC,EAAD,CAA3C;AACA,MAAI,CAACS,SAAD,EAAWC,YAAX,IAA0BV,QAAQ,CAAC,IAAD,CAAtC;;AAEA,MAAIW,aAAa,GAAC,MAAI;AAClB,QAAIC,IAAJ;AACAV,IAAAA,KAAK,CAACW,GAAN,CAAUP,OAAO,GAAC,oBAAlB,EACCQ,IADD,CACMC,GAAG,IAAI;AACTH,MAAAA,IAAI,GAAGG,GAAG,CAACH,IAAX;AACAJ,MAAAA,cAAc,CAACI,IAAD,CAAd;AACH,KAJD,EAKCI,KALD,CAKOC,GAAG,IAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KAPD;;AAQA,QAAGR,SAAH,EAAa;AACTC,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;AACJ,GAbD;;AAeA,MAAIU,IAAI,GAAEC,CAAD,IAAK;AACV,QAAIC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASD,IAAT,CAAcE,KAAzB;AACA,QAAIC,KAAK,GAAGJ,CAAC,CAACE,MAAF,CAASE,KAAT,CAAeD,KAA3B;AACA,QAAIE,WAAW,GAAGL,CAAC,CAACE,MAAF,CAASG,WAAT,CAAqBF,KAAvC;AACA,QAAIG,KAAK,GAAGN,CAAC,CAACE,MAAF,CAASI,KAAT,CAAeH,KAA3B;AACA,QAAII,UAAU,GAAGP,CAAC,CAACE,MAAF,CAASM,QAAT,CAAkBL,KAAnC;AACAM,IAAAA,KAAK,CAACR,IAAD,CAAL;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ,EAAiBG,KAAjB,EAAuBC,WAAvB,EAAmCC,KAAnC,EAAyCC,UAAzC;AACAG,IAAAA,QAAQ,CAAC,OAAD,CAAR;AACH,GATD;;AAYA9B,EAAAA,SAAS,CAAC,MAAI;AACV,QAAGQ,SAAH,EAAa;AACTE,MAAAA,aAAa;AAChB;AACJ,GAJQ,CAAT;AAMA,MAAIqB,WAAW,GAAE;AACbzB,IAAAA,WAAW,EAACA;AADC,GAAjB;AAKA,sBACI,QAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAEyB,WAAhC;AAAA,cACK3B;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAjDO;;GAAMD,e;;KAAAA,e","sourcesContent":["import { \ncreateContext,     \nuseState,\nuseEffect } from \"react\";\nimport axios from 'axios';\n\nconst ProductContext = createContext()\nexport default ProductContext;\n\nexport  const ProductProvider = ({children}) => {\n\n    let rooturl = \"http://localhost:8000\"\n    let [productList,setProductList] = useState([])\n    let [isFetched,setIsFetched]= useState(true)\n\n    let fetchProducts=()=>{\n        let data ;\n        axios.get(rooturl+'/api/product-list/')\n        .then(res => {\n            data = res.data;\n            setProductList(data)\n        })\n        .catch(err => {\n            console.log(err)\n        })\n        if(isFetched){\n            setIsFetched(false)\n        }\n    }\n\n    let Edit=(e)=>{\n        let name = e.target.name.value\n        let image = e.target.image.value\n        let description = e.target.description.value\n        let price = e.target.price.value \n        let categories = e.target.category.value\n        alert(name)\n        console.log(name,image,description,price,categories)\n        navigate(\"/cart\")\n    }\n\n\n    useEffect(()=>{\n        if(isFetched){\n            fetchProducts()\n        }\n    })\n\n    let contextData ={\n        productList:productList,\n    }\n\n\n    return(\n        <ProductContext.Provider value={contextData}>\n            {children}\n        </ProductContext.Provider>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}