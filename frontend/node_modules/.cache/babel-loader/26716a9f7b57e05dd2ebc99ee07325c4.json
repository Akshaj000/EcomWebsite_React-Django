{"ast":null,"code":"var _jsxFileName = \"/mnt/1660E61660E5FC7D/AK360/REACT/Ecom/frontend/src/components/CheckoutForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useStripe, useElements, CardNumberElement, CardExpiryElement, CardCvcElement } from '@stripe/react-stripe-js';\nimport { stripePaymentMethodHandler } from '../utils/script';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CARD_ELEMENT_OPTIONS = {\n  style: {\n    base: {\n      lineHeight: \"27px\",\n      color: \"#212529\",\n      fontSize: \"1.1rem\",\n      \"::placeholder\": {\n        color: \"#aab7c4\"\n      }\n    },\n    invalid: {\n      color: \"#fa755a\",\n      iconColor: \"#fa755a\"\n    }\n  }\n};\nexport default function CheckoutForm(props) {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [errorMsg, setErrorMsg] = useState('');\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleSubmit = async event => {\n    // We don't want to let default form submission happen here,\n    // which would refresh the page.\n    event.preventDefault();\n\n    if (!stripe || !elements) {\n      // Stripe.js has not yet loaded.\n      // Make sure to disable form submission until Stripe.js has loaded.\n      return;\n    }\n\n    setLoading(true);\n    setErrorMsg('');\n    const paymentMethodObj = {\n      type: 'card',\n      card: elements.getElement(CardNumberElement),\n      billing_details: {\n        name,\n        email\n      }\n    };\n    const paymentMethodResult = await stripe.createPaymentMethod(paymentMethodObj);\n    stripePaymentMethodHandler({\n      result: paymentMethodResult,\n      amount: props.amount\n    }, handleResponse);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"d-flex justify-content-between align-items-center mb-3\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-muted\",\n        children: \"Pay with card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6 mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"cc-name\",\n            children: \"Name on card\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"cc-name\",\n            type: \"text\",\n            className: \"form-control\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6 mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"cc-email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"cc-email\",\n            type: \"text\",\n            className: \"form-control\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-12 mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"cc-number\",\n            children: \"Card Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardNumberElement, {\n            id: \"cc-number\",\n            className: \"form-control\",\n            options: CARD_ELEMENT_OPTIONS\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6 mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"expiry\",\n            children: \"Expiration Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardExpiryElement, {\n            id: \"expiry\",\n            className: \"form-control\",\n            options: CARD_ELEMENT_OPTIONS\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6 mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"cvc\",\n            children: \"CVC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardCvcElement, {\n            id: \"cvc\",\n            className: \"form-control\",\n            options: CARD_ELEMENT_OPTIONS\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"mb-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-dark w-100\",\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner-border spinner-border-sm text-light\",\n          role: \"status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 22\n        }, this) : `PAY â‚¹${props.amount}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), errorMsg && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-danger mt-2\",\n        children: errorMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CheckoutForm, \"UX2zHcJ5x0ChstyosacxomwAbAg=\", false, function () {\n  return [useStripe, useElements];\n});\n\n_c = CheckoutForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckoutForm\");","map":{"version":3,"sources":["/mnt/1660E61660E5FC7D/AK360/REACT/Ecom/frontend/src/components/CheckoutForm.js"],"names":["React","useState","useStripe","useElements","CardNumberElement","CardExpiryElement","CardCvcElement","stripePaymentMethodHandler","CARD_ELEMENT_OPTIONS","style","base","lineHeight","color","fontSize","invalid","iconColor","CheckoutForm","props","loading","setLoading","errorMsg","setErrorMsg","name","setName","email","setEmail","stripe","elements","handleSubmit","event","preventDefault","paymentMethodObj","type","card","getElement","billing_details","paymentMethodResult","createPaymentMethod","result","amount","handleResponse","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {\n  useStripe, useElements,\n  CardNumberElement, CardExpiryElement, CardCvcElement\n} from '@stripe/react-stripe-js';\nimport { stripePaymentMethodHandler } from '../utils/script';\n\nconst CARD_ELEMENT_OPTIONS = {\n  style: {\n    base: {\n      lineHeight: \"27px\",\n      color: \"#212529\",\n      fontSize: \"1.1rem\",\n      \"::placeholder\": {\n        color: \"#aab7c4\",\n      },\n    },\n    invalid: {\n      color: \"#fa755a\",\n      iconColor: \"#fa755a\",\n    },\n  },\n};\n \nexport default function CheckoutForm(props) {\n  const [loading, setLoading] = useState(false);\n  const [errorMsg, setErrorMsg] = useState('');\n \n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n \n  const stripe = useStripe();\n  const elements = useElements();\n \n  const handleSubmit = async (event) => {\n    // We don't want to let default form submission happen here,\n    // which would refresh the page.\n    event.preventDefault();\n \n    if (!stripe || !elements) {\n      // Stripe.js has not yet loaded.\n      // Make sure to disable form submission until Stripe.js has loaded.\n      return;\n    }\n \n    setLoading(true);\n    setErrorMsg('');\n \n    const paymentMethodObj = {\n      type: 'card',\n      card: elements.getElement(CardNumberElement),\n      billing_details: {\n        name,\n        email\n      },\n    };\n    const paymentMethodResult = await stripe.createPaymentMethod(paymentMethodObj);\n \n    stripePaymentMethodHandler({\n      result: paymentMethodResult,\n      amount: props.amount\n    }, handleResponse);\n  };\n \n  return (\n    <React.Fragment>\n      <h4 className=\"d-flex justify-content-between align-items-center mb-3\">\n        <span className=\"text-muted\">Pay with card</span>\n      </h4>\n      <form onSubmit={handleSubmit}>\n \n        <div className=\"row\">\n          <div className=\"col-md-6 mb-3\">\n            <label htmlFor=\"cc-name\">Name on card</label>\n            <input\n              id=\"cc-name\"\n              type=\"text\"\n              className=\"form-control\"\n              value={name}\n              onChange={e => setName(e.target.value)}\n            />\n          </div>\n          <div className=\"col-md-6 mb-3\">\n            <label htmlFor=\"cc-email\">Email</label>\n            <input\n              id=\"cc-email\"\n              type=\"text\"\n              className=\"form-control\"\n              value={email}\n              onChange={e => setEmail(e.target.value)}\n            />\n          </div>\n        </div>\n \n        <div className=\"row\">\n          <div className=\"col-md-12 mb-3\">\n            <label htmlFor=\"cc-number\">Card Number</label>\n            <CardNumberElement\n              id=\"cc-number\"\n              className=\"form-control\"\n              options={CARD_ELEMENT_OPTIONS}\n            />\n          </div>\n        </div>\n \n        <div className=\"row\">\n          <div className=\"col-md-6 mb-3\">\n            <label htmlFor=\"expiry\">Expiration Date</label>\n            <CardExpiryElement\n              id=\"expiry\"\n              className=\"form-control\"\n              options={CARD_ELEMENT_OPTIONS}\n            />\n          </div>\n          <div className=\"col-md-6 mb-3\">\n            <label htmlFor=\"cvc\">CVC</label>\n            <CardCvcElement\n              id=\"cvc\"\n              className=\"form-control\"\n              options={CARD_ELEMENT_OPTIONS}\n            />\n          </div>\n        </div>\n \n        <hr className=\"mb-4\" />\n        <button className=\"btn btn-dark w-100\" type=\"submit\" disabled={loading}>\n          {loading ? <div className=\"spinner-border spinner-border-sm text-light\" role=\"status\"></div> : `PAY â‚¹${props.amount}`}\n        </button>\n        {errorMsg && <div className=\"text-danger mt-2\">{errorMsg}</div>}\n      </form>\n    </React.Fragment>\n  );\n}"]},"metadata":{},"sourceType":"module"}