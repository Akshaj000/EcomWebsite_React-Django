{"ast":null,"code":"var _jsxFileName = \"/mnt/1660E61660E5FC7D/AK360/REACT/Ecom/frontend/src/context/CartContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect, useContext } from \"react\";\nimport axios from 'axios';\nimport AuthContext from \"./AuthContext\";\nimport ProductContext from \"./ProductContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport default CartContext;\nexport const CartProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  let rooturl = \"http://localhost:8000\";\n  let [CartList, setCartList] = useState([]);\n  let [isFetched, setIsFetched] = useState(true);\n  let {\n    authToken\n  } = useContext(AuthContext);\n  let {\n    productList\n  } = useContext(ProductContext);\n\n  let fetchCarts = () => {\n    let data;\n    axios.get(rooturl + '/api/Cart-list/', {}).then(res => {\n      data = res.data;\n      setCartList(data);\n    }).catch(err => {\n      console.log(err);\n    });\n\n    if (isFetched) {\n      setIsFetched(false);\n    }\n  };\n\n  useEffect(() => {\n    console.log(authToken);\n\n    if (isFetched) {\n      fetchCarts();\n    }\n\n    let interval = setInterval(() => {\n      fetchCarts();\n    }, 30000);\n    return () => clearInterval(interval);\n  });\n  let contextData = {\n    CartList: CartList\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: contextData,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartProvider, \"gboy07BsgWncxaemEGWS4UYO3lE=\");\n\n_c = CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/mnt/1660E61660E5FC7D/AK360/REACT/Ecom/frontend/src/context/CartContext.js"],"names":["createContext","useState","useEffect","useContext","axios","AuthContext","ProductContext","CartContext","CartProvider","children","rooturl","CartList","setCartList","isFetched","setIsFetched","authToken","productList","fetchCarts","data","get","then","res","catch","err","console","log","interval","setInterval","clearInterval","contextData"],"mappings":";;;AAAA,SACAA,aADA,EAEAC,QAFA,EAGAC,SAHA,EAIAC,UAJA,QAIkB,OAJlB;AAKA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,MAAMC,WAAW,gBAAGP,aAAa,EAAjC;AACA,eAAeO,WAAf;AAEA,OAAQ,MAAMC,YAAY,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AAEzC,MAAIC,OAAO,GAAG,uBAAd;AACA,MAAI,CAACC,QAAD,EAAUC,WAAV,IAAyBX,QAAQ,CAAC,EAAD,CAArC;AACA,MAAI,CAACY,SAAD,EAAWC,YAAX,IAA0Bb,QAAQ,CAAC,IAAD,CAAtC;AACA,MAAI;AAACc,IAAAA;AAAD,MAAcZ,UAAU,CAACE,WAAD,CAA5B;AACA,MAAI;AAACW,IAAAA;AAAD,MAAgBb,UAAU,CAACG,cAAD,CAA9B;;AAGA,MAAIW,UAAU,GAAC,MAAI;AACf,QAAIC,IAAJ;AACAd,IAAAA,KAAK,CAACe,GAAN,CAAUT,OAAO,GAAC,iBAAlB,EAAoC,EAApC,EACCU,IADD,CACMC,GAAG,IAAI;AACTH,MAAAA,IAAI,GAAGG,GAAG,CAACH,IAAX;AACAN,MAAAA,WAAW,CAACM,IAAD,CAAX;AACH,KAJD,EAKCI,KALD,CAKOC,GAAG,IAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KAPD;;AAQA,QAAGV,SAAH,EAAa;AACTC,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;AACJ,GAbD;;AAgBAZ,EAAAA,SAAS,CAAC,MAAI;AACVsB,IAAAA,OAAO,CAACC,GAAR,CAAYV,SAAZ;;AACA,QAAGF,SAAH,EAAa;AACTI,MAAAA,UAAU;AACb;;AACD,QAAIS,QAAQ,GAAGC,WAAW,CAAC,MAAM;AAC7BV,MAAAA,UAAU;AACb,KAFyB,EAExB,KAFwB,CAA1B;AAGA,WAAO,MAAIW,aAAa,CAACF,QAAD,CAAxB;AACH,GATQ,CAAT;AAWA,MAAIG,WAAW,GAAE;AACblB,IAAAA,QAAQ,EAACA;AADI,GAAjB;AAKA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEkB,WAA7B;AAAA,cACKpB;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA9CO;;GAAMD,Y;;KAAAA,Y","sourcesContent":["import { \ncreateContext,     \nuseState,\nuseEffect,\nuseContext } from \"react\";\nimport axios from 'axios';\nimport AuthContext from \"./AuthContext\";\nimport ProductContext from \"./ProductContext\";\n\nconst CartContext = createContext()\nexport default CartContext;\n\nexport  const CartProvider = ({children}) => {\n\n    let rooturl = \"http://localhost:8000\"\n    let [CartList,setCartList] = useState([])\n    let [isFetched,setIsFetched]= useState(true)\n    let {authToken} = useContext(AuthContext)\n    let {productList} = useContext(ProductContext)\n\n\n    let fetchCarts=()=>{\n        let data ;\n        axios.get(rooturl+'/api/Cart-list/',{})\n        .then(res => {\n            data = res.data;\n            setCartList(data)\n        })\n        .catch(err => {\n            console.log(err)\n        })\n        if(isFetched){\n            setIsFetched(false)\n        }\n    }\n\n\n    useEffect(()=>{\n        console.log(authToken)\n        if(isFetched){\n            fetchCarts()\n        }\n        let interval = setInterval(() => {\n            fetchCarts()\n        },30000)\n        return ()=>clearInterval(interval)\n    })\n\n    let contextData ={\n        CartList:CartList,\n    }\n\n\n    return(\n        <CartContext.Provider value={contextData}>\n            {children}\n        </CartContext.Provider>\n    )\n}\n    \n    "]},"metadata":{},"sourceType":"module"}