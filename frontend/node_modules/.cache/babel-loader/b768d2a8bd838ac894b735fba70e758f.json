{"ast":null,"code":"var _jsxFileName = \"/mnt/1660E61660E5FC7D/AK360/REACT/Ecom/frontend/src/context/CategoryContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { rooturl } from \"../utils/functions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CategoryContext = /*#__PURE__*/createContext();\nexport default CategoryContext;\nexport const CategoryProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  let [categories, setCategories] = useState();\n  let [isFetched, setIsFetched] = useState(true);\n\n  let fetchCategories = () => {\n    let token = JSON.parse(localStorage.getItem('authToken')).access;\n    axios.get(rooturl + '/api/category-list/', {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => {\n      let data = res.data;\n      setCategories(data);\n    });\n\n    if (isFetched) {\n      setIsFetched(false);\n    }\n  };\n\n  useEffect(() => {\n    if (isFetched) {\n      fetchCategories();\n    }\n\n    console.log(categoryList);\n  });\n  let contextData = {\n    categories: categories\n  };\n  return /*#__PURE__*/_jsxDEV(CategoryContext.Provider, {\n    value: contextData,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CategoryProvider, \"mZJt92HqLEtWC6TYMuuoZrs6WbY=\");\n\n_c = CategoryProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CategoryProvider\");","map":{"version":3,"sources":["/mnt/1660E61660E5FC7D/AK360/REACT/Ecom/frontend/src/context/CategoryContext.js"],"names":["createContext","useState","useEffect","axios","rooturl","CategoryContext","CategoryProvider","children","categories","setCategories","isFetched","setIsFetched","fetchCategories","token","JSON","parse","localStorage","getItem","access","get","headers","Authorization","then","res","data","console","log","categoryList","contextData"],"mappings":";;;AAAA,SACAA,aADA,EAEAC,QAFA,EAGAC,SAHA,QAGiB,OAHjB;AAIA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,oBAAxB;;AACA,MAAMC,eAAe,gBAAGL,aAAa,EAArC;AACA,eAAeK,eAAf;AAEA,OAAQ,MAAMC,gBAAgB,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AAE7C,MAAI,CAACC,UAAD,EAAYC,aAAZ,IAA6BR,QAAQ,EAAzC;AACA,MAAI,CAACS,SAAD,EAAWC,YAAX,IAA0BV,QAAQ,CAAC,IAAD,CAAtC;;AAEA,MAAIW,eAAe,GAAC,MAAI;AACpB,QAAIC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,EAA8CC,MAA1D;AACAf,IAAAA,KAAK,CAACgB,GAAN,CAAUf,OAAO,GAAC,qBAAlB,EACA;AAACgB,MAAAA,OAAO,EAAC;AACLC,QAAAA,aAAa,EAAM,UAASR,KAAM;AAD7B;AAAT,KADA,EAICS,IAJD,CAIMC,GAAG,IAAI;AACT,UAAIC,IAAI,GAAGD,GAAG,CAACC,IAAf;AACAf,MAAAA,aAAa,CAACe,IAAD,CAAb;AAEH,KARD;;AASA,QAAGd,SAAH,EAAa;AACTC,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;AACJ,GAdD;;AAiBAT,EAAAA,SAAS,CAAC,MAAI;AACV,QAAGQ,SAAH,EAAa;AACTE,MAAAA,eAAe;AAClB;;AACDa,IAAAA,OAAO,CAACC,GAAR,CAAYC,YAAZ;AACH,GALQ,CAAT;AAOA,MAAIC,WAAW,GAAE;AACbpB,IAAAA,UAAU,EAACA;AADE,GAAjB;AAKA,sBACI,QAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAEoB,WAAjC;AAAA,cACKrB;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAvCO;;GAAMD,gB;;KAAAA,gB","sourcesContent":["import { \ncreateContext,     \nuseState,\nuseEffect } from \"react\";\nimport axios from 'axios';\nimport { rooturl } from \"../utils/functions\";\nconst CategoryContext = createContext()\nexport default CategoryContext;\n\nexport  const CategoryProvider = ({children}) => {\n\n    let [categories,setCategories] = useState()\n    let [isFetched,setIsFetched]= useState(true)\n\n    let fetchCategories=()=>{\n        let token = JSON.parse(localStorage.getItem('authToken')).access\n        axios.get(rooturl+'/api/category-list/',\n        {headers:{\n            Authorization  :  `Bearer ${token}`\n        }})\n        .then(res => {\n            let data = res.data;\n            setCategories(data)\n\n        })\n        if(isFetched){\n            setIsFetched(false)\n        } \n    }\n\n\n    useEffect(()=>{\n        if(isFetched){\n            fetchCategories()\n        }\n        console.log(categoryList)\n    })\n\n    let contextData ={\n        categories:categories,\n    }\n\n\n    return(\n        <CategoryContext.Provider value={contextData}>\n            {children}\n        </CategoryContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}