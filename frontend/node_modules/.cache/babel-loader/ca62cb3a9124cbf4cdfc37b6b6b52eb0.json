{"ast":null,"code":"var _jsxFileName = \"/mnt/1660E61660E5FC7D/AK360/REACT/Ecom/frontend/src/pages/Payment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  googlePayClient\n} = window;\nconst baseCardPaymentMethod = {\n  type: \"CARD\",\n  parameters: {\n    allowedCardNetworks: [\"VISA\", \"MASTERCARD\"],\n    allowedAuthMethods: [\"PAN_ONLY\", \"CRYPTOGRAM_3DS\"]\n  }\n};\nconst googlePayBaseConfiguration = {\n  apiVersion: 2,\n  apiVersionMinor: 0,\n  allowedPaymentMethods: [baseCardPaymentMethod]\n};\nexport default function Payment() {\n  _s();\n\n  const [gPayBtn, setGPayBtn] = useState(null);\n\n  function createAndAddButton() {\n    if (googlePayClient) {\n      const googlePayButton = googlePayClient.createButton({\n        buttonColor: \"default\",\n        buttonType: \"long\",\n        onClick: processPayment\n      });\n      setGPayBtn(googlePayButton);\n    }\n  }\n\n  function processPayment() {\n    console.log(\"test\");\n    const tokenizationSpecification = {\n      type: \"PAYMENT_GATEWAY\",\n      parameters: {\n        gateway: \"stripe\",\n        \"stripe:version\": \"v3\",\n        \"stripe:publishableKey\": \"pk_test_35p114pH8oNuHX72SmrvsFqh00Azv3ZaIA\"\n      }\n    };\n    const cardPaymentMethod = {\n      type: \"CARD\",\n      tokenizationSpecification: tokenizationSpecification,\n      parameters: {\n        allowedCardNetworks: [\"VISA\", \"MASTERCARD\"],\n        allowedAuthMethods: [\"PAN_ONLY\", \"CRYPTOGRAM_3DS\"],\n        billingAddressRequired: true,\n        billingAddressParameters: {\n          format: \"FULL\",\n          phoneNumberRequired: true\n        }\n      }\n    };\n    const transactionInfo = {\n      totalPriceStatus: \"FINAL\",\n      totalPrice: \"123.45\",\n      currencyCode: \"USD\"\n    };\n    const merchantInfo = {\n      // merchantId: '01234567890123456789', Only in PRODUCTION\n      merchantName: \"Example Merchant Name\"\n    };\n    const paymentDataRequest = { ...googlePayBaseConfiguration,\n      ...{\n        allowedPaymentMethods: [cardPaymentMethod],\n        transactionInfo,\n        merchantInfo\n      }\n    };\n    googlePayClient.loadPaymentData(paymentDataRequest).then(function (paymentData) {\n      console.log(paymentData);\n    }).catch(function (err) {\n      console.log(err);\n    });\n  }\n\n  useEffect(() => {\n    googlePayClient.isReadyToPay(googlePayBaseConfiguration).then(function (response) {\n      if (response.result) {\n        createAndAddButton();\n      } else {\n        alert(\"Unable to pay using Google Pay\");\n      }\n    }).catch(function (err) {\n      console.error(\"Error determining readiness to use Google Pay: \", err);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Click the Pay button\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: processPayment,\n      dangerouslySetInnerHTML: {\n        __html: gPayBtn && gPayBtn.innerHTML\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Payment, \"kAcMamTUCJU0BoPuHEofGpcrKWs=\");\n\n_c = Payment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Payment\");","map":{"version":3,"sources":["/mnt/1660E61660E5FC7D/AK360/REACT/Ecom/frontend/src/pages/Payment.js"],"names":["React","useState","useEffect","googlePayClient","window","baseCardPaymentMethod","type","parameters","allowedCardNetworks","allowedAuthMethods","googlePayBaseConfiguration","apiVersion","apiVersionMinor","allowedPaymentMethods","Payment","gPayBtn","setGPayBtn","createAndAddButton","googlePayButton","createButton","buttonColor","buttonType","onClick","processPayment","console","log","tokenizationSpecification","gateway","cardPaymentMethod","billingAddressRequired","billingAddressParameters","format","phoneNumberRequired","transactionInfo","totalPriceStatus","totalPrice","currencyCode","merchantInfo","merchantName","paymentDataRequest","loadPaymentData","then","paymentData","catch","err","isReadyToPay","response","result","alert","error","__html","innerHTML"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\n\nconst { googlePayClient } = window;\n\nconst baseCardPaymentMethod = {\n  type: \"CARD\",\n  parameters: {\n    allowedCardNetworks: [\"VISA\", \"MASTERCARD\"],\n    allowedAuthMethods: [\"PAN_ONLY\", \"CRYPTOGRAM_3DS\"]\n  }\n};\n\nconst googlePayBaseConfiguration = {\n  apiVersion: 2,\n  apiVersionMinor: 0,\n  allowedPaymentMethods: [baseCardPaymentMethod]\n};\n\nexport default function Payment() {\n  const [gPayBtn, setGPayBtn] = useState(null);\n\n  function createAndAddButton() {\n    if (googlePayClient) {\n      const googlePayButton = googlePayClient.createButton({\n        buttonColor: \"default\",\n\n        buttonType: \"long\",\n\n        onClick: processPayment\n      });\n\n      setGPayBtn(googlePayButton);\n    }\n  }\n\n  function processPayment() {\n    console.log(\"test\");\n    const tokenizationSpecification = {\n      type: \"PAYMENT_GATEWAY\",\n      parameters: {\n        gateway: \"stripe\",\n        \"stripe:version\": \"v3\",\n        \"stripe:publishableKey\": \"pk_test_35p114pH8oNuHX72SmrvsFqh00Azv3ZaIA\"\n      }\n    };\n\n    const cardPaymentMethod = {\n      type: \"CARD\",\n      tokenizationSpecification: tokenizationSpecification,\n      parameters: {\n        allowedCardNetworks: [\"VISA\", \"MASTERCARD\"],\n        allowedAuthMethods: [\"PAN_ONLY\", \"CRYPTOGRAM_3DS\"],\n        billingAddressRequired: true,\n        billingAddressParameters: {\n          format: \"FULL\",\n          phoneNumberRequired: true\n        }\n      }\n    };\n\n    const transactionInfo = {\n      totalPriceStatus: \"FINAL\",\n      totalPrice: \"123.45\",\n      currencyCode: \"USD\"\n    };\n\n    const merchantInfo = {\n      // merchantId: '01234567890123456789', Only in PRODUCTION\n      merchantName: \"Example Merchant Name\"\n    };\n\n    const paymentDataRequest = {\n      ...googlePayBaseConfiguration,\n      ...{\n        allowedPaymentMethods: [cardPaymentMethod],\n        transactionInfo,\n        merchantInfo\n      }\n    };\n\n    googlePayClient\n      .loadPaymentData(paymentDataRequest)\n      .then(function (paymentData) {\n        console.log(paymentData);\n      })\n      .catch(function (err) {\n        console.log(err);\n      });\n  }\n\n  useEffect(() => {\n    googlePayClient\n      .isReadyToPay(googlePayBaseConfiguration)\n      .then(function (response) {\n        if (response.result) {\n          createAndAddButton();\n        } else {\n          alert(\"Unable to pay using Google Pay\");\n        }\n      })\n      .catch(function (err) {\n        console.error(\"Error determining readiness to use Google Pay: \", err);\n      });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Click the Pay button</h1>\n      <div\n        onClick={processPayment}\n        dangerouslySetInnerHTML={{ __html: gPayBtn && gPayBtn.innerHTML }}\n      />\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}