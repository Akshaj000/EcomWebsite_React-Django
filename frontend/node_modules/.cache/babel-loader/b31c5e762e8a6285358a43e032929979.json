{"ast":null,"code":"var _jsxFileName = \"/mnt/1660E61660E5FC7D/AK360/REACT/Ecom/frontend/src/context/CartContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport default CartContext;\nexport const CartProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  let rooturl = \"http://localhost:8000/api/\";\n  let [carttList, cartList] = useState([]);\n  let [isFetched, setIsFetched] = useState(true);\n\n  let fetchCart = () => {\n    let data;\n    let token = JSON.parse(localStorage.getItem('authToken')).refresh;\n    console.log('Bearer ${token}');\n    axios.get(rooturl + 'cart-list/', {\n      headers: {\n        \"Authorization\": 'Bearer ${token}'\n      }\n    }).then(res => {\n      console.log(res);\n    }).catch(err => {\n      console.log(err);\n    });\n\n    if (isFetched) {\n      setIsFetched(false);\n    }\n  };\n\n  useEffect(() => {\n    if (isFetched) {\n      fetchCart();\n    }\n  });\n  let contextData = {\n    cartList: cartList\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: contextData,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartProvider, \"X+HM9izzON0jh2bNgu4pi1XTaz8=\");\n\n_c = CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/mnt/1660E61660E5FC7D/AK360/REACT/Ecom/frontend/src/context/CartContext.js"],"names":["createContext","useState","useEffect","axios","CartContext","CartProvider","children","rooturl","carttList","cartList","isFetched","setIsFetched","fetchCart","data","token","JSON","parse","localStorage","getItem","refresh","console","log","get","headers","then","res","catch","err","contextData"],"mappings":";;;AAAA,SACAA,aADA,EAEAC,QAFA,EAGAC,SAHA,QAGiB,OAHjB;AAIA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,WAAW,gBAAGJ,aAAa,EAAjC;AACA,eAAeI,WAAf;AAEA,OAAQ,MAAMC,YAAY,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAACC,IAAAA;AAAD,GAAe;AAEzC,MAAIC,OAAO,GAAG,4BAAd;AACA,MAAI,CAACC,SAAD,EAAWC,QAAX,IAAuBR,QAAQ,CAAC,EAAD,CAAnC;AACA,MAAI,CAACS,SAAD,EAAWC,YAAX,IAA0BV,QAAQ,CAAC,IAAD,CAAtC;;AAGA,MAAIW,SAAS,GAAC,MAAI;AACd,QAAIC,IAAJ;AACA,QAAIC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,EAA8CC,OAA1D;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAlB,IAAAA,KAAK,CAACmB,GAAN,CAAUf,OAAO,GAAC,YAAlB,EAA+B;AAAEgB,MAAAA,OAAO,EAAE;AAAC,yBAAkB;AAAnB;AAAX,KAA/B,EACCC,IADD,CACMC,GAAG,IAAI;AACTL,MAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACH,KAHD,EAICC,KAJD,CAIOC,GAAG,IAAI;AACVP,MAAAA,OAAO,CAACC,GAAR,CAAYM,GAAZ;AACH,KAND;;AAOA,QAAGjB,SAAH,EAAa;AACTC,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;AACJ,GAdD;;AAiBAT,EAAAA,SAAS,CAAC,MAAI;AACV,QAAGQ,SAAH,EAAa;AACTE,MAAAA,SAAS;AACZ;AACJ,GAJQ,CAAT;AAMA,MAAIgB,WAAW,GAAE;AACbnB,IAAAA,QAAQ,EAACA;AADI,GAAjB;AAKA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEmB,WAA7B;AAAA,cACKtB;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAxCO;;GAAMD,Y;;KAAAA,Y","sourcesContent":["import { \ncreateContext,     \nuseState,\nuseEffect } from \"react\";\nimport axios from 'axios';\n\nconst CartContext = createContext()\nexport default CartContext;\n\nexport  const CartProvider = ({children}) => {\n\n    let rooturl = \"http://localhost:8000/api/\"\n    let [carttList,cartList] = useState([])\n    let [isFetched,setIsFetched]= useState(true)\n    \n\n    let fetchCart=()=>{\n        let data ;\n        let token = JSON.parse(localStorage.getItem('authToken')).refresh\n        console.log('Bearer ${token}')\n        axios.get(rooturl+'cart-list/',{ headers: {\"Authorization\" : 'Bearer ${token}'} })\n        .then(res => {\n            console.log(res)\n        })\n        .catch(err => {\n            console.log(err)\n        })\n        if(isFetched){\n            setIsFetched(false)\n        }\n    }\n\n\n    useEffect(()=>{\n        if(isFetched){\n            fetchCart()\n        }\n    })\n\n    let contextData ={\n        cartList:cartList,\n    }\n\n\n    return(\n        <CartContext.Provider value={contextData}>\n            {children}\n        </CartContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}