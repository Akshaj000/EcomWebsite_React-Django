{"ast":null,"code":"var _jsxFileName = \"/mnt/1660E61660E5FC7D/AK360/REACT/Ecom/frontend/src/context/ProductContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { useNavigate } from \"react-router-dom\";\nimport { rooturl } from \"../utils/functions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductContext = /*#__PURE__*/createContext();\nexport default ProductContext;\nexport const ProductProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const navigate = useNavigate();\n  let [productList, setProductList] = useState([]);\n  let [isFetched, setIsFetched] = useState(true);\n  let [thisProduct, setThisProduct] = useState([]);\n\n  let fetchProducts = () => {\n    let data;\n    axios.get(rooturl + '/api/product-list/').then(res => {\n      data = res.data;\n      setProductList(data);\n    }).catch(err => {\n      console.log(err);\n    });\n\n    if (isFetched) {\n      setIsFetched(false);\n    }\n  };\n\n  let editProduct = e => {\n    e.preventDefault();\n    console.log(thisProduct, name, image, description, price, categories);\n    axios.post(rooturl + '/api/product-update/' + thisProduct + \"/\", form_data, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).then(function (response) {\n      console.log(response);\n    }).catch(function (error) {\n      alert(error);\n    });\n  };\n\n  useEffect(() => {\n    if (isFetched) {\n      fetchProducts();\n      console.log(productList);\n    }\n  });\n  let contextData = {\n    productList: productList,\n    editProduct: editProduct,\n    setThisProduct: setThisProduct\n  };\n  return /*#__PURE__*/_jsxDEV(ProductContext.Provider, {\n    value: contextData,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProductProvider, \"yzQ03xCfiTLaYq9JwGuwuDmYxPc=\", false, function () {\n  return [useNavigate];\n});\n\n_c = ProductProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductProvider\");","map":{"version":3,"sources":["/mnt/1660E61660E5FC7D/AK360/REACT/Ecom/frontend/src/context/ProductContext.js"],"names":["createContext","useState","useEffect","axios","useNavigate","rooturl","ProductContext","ProductProvider","children","navigate","productList","setProductList","isFetched","setIsFetched","thisProduct","setThisProduct","fetchProducts","data","get","then","res","catch","err","console","log","editProduct","e","preventDefault","name","image","description","price","categories","post","form_data","headers","Authorization","token","response","error","alert","contextData"],"mappings":";;;AAAA,SACIA,aADJ,EAEIC,QAFJ,EAGIC,SAHJ,QAIO,OAJP;AAKA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,OAAT,QAAwB,oBAAxB;;AAEA,MAAMC,cAAc,gBAAGN,aAAa,EAApC;AACA,eAAeM,cAAf;AAEA,OAAO,MAAMC,eAAe,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAE7C,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,MAAI,CAACM,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,EAAD,CAA5C;AACA,MAAI,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,IAAD,CAAxC;AACA,MAAI,CAACa,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC,EAAD,CAA5C;;AAEA,MAAIe,aAAa,GAAG,MAAM;AACtB,QAAIC,IAAJ;AACAd,IAAAA,KAAK,CAACe,GAAN,CAAUb,OAAO,GAAG,oBAApB,EACKc,IADL,CACUC,GAAG,IAAI;AACTH,MAAAA,IAAI,GAAGG,GAAG,CAACH,IAAX;AACAN,MAAAA,cAAc,CAACM,IAAD,CAAd;AACH,KAJL,EAKKI,KALL,CAKWC,GAAG,IAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KAPL;;AAQA,QAAIV,SAAJ,EAAe;AACXC,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;AACJ,GAbD;;AAeA,MAAIY,WAAW,GAAIC,CAAD,IAAO;AACrBA,IAAAA,CAAC,CAACC,cAAF;AAEAJ,IAAAA,OAAO,CAACC,GAAR,CAAYV,WAAZ,EAAwBc,IAAxB,EAA6BC,KAA7B,EAAmCC,WAAnC,EAA+CC,KAA/C,EAAqDC,UAArD;AACA7B,IAAAA,KAAK,CAAC8B,IAAN,CAAW5B,OAAO,GAAG,sBAAV,GAAmCS,WAAnC,GAAiD,GAA5D,EAAgEoB,SAAhE,EACE;AACMC,MAAAA,OAAO,EAAE;AAELC,QAAAA,aAAa,EAAG,UAASC,KAAM;AAF1B;AADf,KADF,EAOKlB,IAPL,CAOU,UAASmB,QAAT,EAAmB;AACrBf,MAAAA,OAAO,CAACC,GAAR,CAAYc,QAAZ;AACH,KATL,EAUKjB,KAVL,CAUW,UAASkB,KAAT,EAAgB;AACnBC,MAAAA,KAAK,CAACD,KAAD,CAAL;AACH,KAZL;AAaH,GAjBD;;AAoBArC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIU,SAAJ,EAAe;AACXI,MAAAA,aAAa;AACbO,MAAAA,OAAO,CAACC,GAAR,CAAYd,WAAZ;AACH;AACJ,GALQ,CAAT;AAOA,MAAI+B,WAAW,GAAG;AACd/B,IAAAA,WAAW,EAAEA,WADC;AAEde,IAAAA,WAAW,EAAEA,WAFC;AAGdV,IAAAA,cAAc,EAAEA;AAHF,GAAlB;AAOA,sBACI,QAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAK0B,WAAnC;AAAA,cACGjC;AADH;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA7DM;;GAAMD,e;UAEQH,W;;;KAFRG,e","sourcesContent":["import {\n    createContext,\n    useState,\n    useEffect\n} from \"react\";\nimport axios from 'axios';\nimport { useNavigate } from \"react-router-dom\";\nimport { rooturl } from \"../utils/functions\";\n\nconst ProductContext = createContext()\nexport default ProductContext;\n\nexport const ProductProvider = ({ children }) => {\n\n    const navigate = useNavigate()\n    let [productList, setProductList] = useState([])\n    let [isFetched, setIsFetched] = useState(true)\n    let [thisProduct, setThisProduct] = useState([])\n\n    let fetchProducts = () => {\n        let data;\n        axios.get(rooturl + '/api/product-list/')\n            .then(res => {\n                data = res.data;\n                setProductList(data)\n            })\n            .catch(err => {\n                console.log(err)\n            })\n        if (isFetched) {\n            setIsFetched(false)\n        }\n    }\n\n    let editProduct = (e) => {\n        e.preventDefault()\n       \n        console.log(thisProduct,name,image,description,price,categories)\n        axios.post(rooturl + '/api/product-update/' + thisProduct + \"/\",form_data\n        , {\n                headers: {\n\n                    Authorization: `Bearer ${token}`\n                }\n            })\n            .then(function(response) {\n                console.log(response)\n            })\n            .catch(function(error) {\n                alert(error)\n            });\n    }\n\n\n    useEffect(() => {\n        if (isFetched) {\n            fetchProducts()\n            console.log(productList)\n        }\n    })\n\n    let contextData = {\n        productList: productList,\n        editProduct: editProduct,\n        setThisProduct: setThisProduct,\n    }\n\n\n    return ( \n        <ProductContext.Provider value = { contextData }>\n          {children } \n        </ProductContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}