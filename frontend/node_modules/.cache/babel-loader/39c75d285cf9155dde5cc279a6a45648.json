{"ast":null,"code":"var _jsxFileName = \"/mnt/1660E61660E5FC7D/AK360/REACT/Ecom/frontend/src/components/googlepaycard.js\";\nimport React from \"react\";\nimport GooglePayButton from '@google-pay/button-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Googlepaybutton(props) {\n  return /*#__PURE__*/_jsxDEV(GooglePayButton, {\n    environment: \"TEST\",\n    buttonSizeMode: \"fill\",\n    paymentRequest: {\n      apiVersion: 2,\n      apiVersionMinor: 0,\n      allowedPaymentMethods: [{\n        type: 'CARD',\n        parameters: {\n          allowedAuthMethods: ['PAN_ONLY', 'CRYPTOGRAM_3DS'],\n          allowedCardNetworks: ['MASTERCARD', 'VISA']\n        },\n        tokenizationSpecification: {\n          parameters: {\n            gateway: 'example',\n            gatewayMerchantId: 'exampleGatewayMerchantId'\n          }\n        }\n      }],\n      merchantInfo: {\n        merchantId: '17613812255336763067',\n        merchantName: 'Demo Only(you wll not be charged)'\n      },\n      transactionInfo: {\n        totalPriceStatus: 'FINAL',\n        totalPriceLabel: 'Total',\n        totalPrice: props.totalPrice,\n        currencyCode: 'INR',\n        countryCode: 'IN'\n      }\n    },\n    onLoadPaymentData: paymentData => {\n      console.log('TODO: send order to server', paymentData.paymentMethodData);\n      props;\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n}\n_c = Googlepaybutton;\n\nvar _c;\n\n$RefreshReg$(_c, \"Googlepaybutton\");","map":{"version":3,"sources":["/mnt/1660E61660E5FC7D/AK360/REACT/Ecom/frontend/src/components/googlepaycard.js"],"names":["React","GooglePayButton","Googlepaybutton","props","apiVersion","apiVersionMinor","allowedPaymentMethods","type","parameters","allowedAuthMethods","allowedCardNetworks","tokenizationSpecification","gateway","gatewayMerchantId","merchantInfo","merchantId","merchantName","transactionInfo","totalPriceStatus","totalPriceLabel","totalPrice","currencyCode","countryCode","paymentData","console","log","paymentMethodData"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,0BAA5B;;AACA,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAA+B;AAC1C,sBACA,QAAC,eAAD;AACI,IAAA,WAAW,EAAC,MADhB;AAEI,IAAA,cAAc,EAAC,MAFnB;AAGI,IAAA,cAAc,EAAE;AACZC,MAAAA,UAAU,EAAC,CADC;AAEZC,MAAAA,eAAe,EAAC,CAFJ;AAGZC,MAAAA,qBAAqB,EAAC,CAAC;AACnBC,QAAAA,IAAI,EAAC,MADc;AAEnBC,QAAAA,UAAU,EAAC;AACPC,UAAAA,kBAAkB,EAAC,CAAC,UAAD,EAAY,gBAAZ,CADZ;AAEPC,UAAAA,mBAAmB,EAAC,CAAC,YAAD,EAAc,MAAd;AAFb,SAFQ;AAMnBC,QAAAA,yBAAyB,EAAC;AACtBH,UAAAA,UAAU,EAAC;AACPI,YAAAA,OAAO,EAAE,SADF;AAEPC,YAAAA,iBAAiB,EAAC;AAFX;AADW;AANP,OAAD,CAHV;AAiBZC,MAAAA,YAAY,EAAC;AACTC,QAAAA,UAAU,EAAC,sBADF;AAETC,QAAAA,YAAY,EAAC;AAFJ,OAjBD;AAsBZC,MAAAA,eAAe,EAAC;AACZC,QAAAA,gBAAgB,EAAC,OADL;AAEZC,QAAAA,eAAe,EAAC,OAFJ;AAGZC,QAAAA,UAAU,EAAEjB,KAAK,CAACiB,UAHN;AAIZC,QAAAA,YAAY,EAAC,KAJD;AAKZC,QAAAA,WAAW,EAAC;AALA;AAtBJ,KAHpB;AAiCI,IAAA,iBAAiB,EAAEC,WAAW,IAAE;AAC5BC,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CF,WAAW,CAACG,iBAAtD;AACAvB,MAAAA,KAAK;AACR;AApCL;AAAA;AAAA;AAAA;AAAA,UADA;AAwCH;KAzCuBD,e","sourcesContent":["import React from \"react\";\nimport GooglePayButton from '@google-pay/button-react';\nexport default function Googlepaybutton(props){\n    return(\n    <GooglePayButton\n        environment=\"TEST\"\n        buttonSizeMode=\"fill\"\n        paymentRequest={{\n            apiVersion:2,\n            apiVersionMinor:0,\n            allowedPaymentMethods:[{\n                type:'CARD',\n                parameters:{\n                    allowedAuthMethods:['PAN_ONLY','CRYPTOGRAM_3DS'],\n                    allowedCardNetworks:['MASTERCARD','VISA']\n                },\n                tokenizationSpecification:{\n                    parameters:{\n                        gateway :'example',\n                        gatewayMerchantId:'exampleGatewayMerchantId',\n                    },\n                },\n\n            },],\n            merchantInfo:{\n                merchantId:'17613812255336763067',\n                merchantName:'Demo Only(you wll not be charged)',\n\n            },\n            transactionInfo:{\n                totalPriceStatus:'FINAL',\n                totalPriceLabel:'Total',\n                totalPrice: props.totalPrice,\n                currencyCode:'INR',\n                countryCode:'IN',\n            }\n        }}\n        onLoadPaymentData={paymentData=>{\n            console.log('TODO: send order to server', paymentData.paymentMethodData);\n            props\n        }}\n    />\n    )\n}"]},"metadata":{},"sourceType":"module"}