{"ast":null,"code":"var _jsxFileName = \"/mnt/1660E61660E5FC7D/AK360/REACT/Ecom/frontend/src/context/SearchContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { useNavigate } from \"react-router-dom\";\nimport { rooturl } from \"../utils/functions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchContext = /*#__PURE__*/createContext();\nexport default SearchContext;\nexport const SearchProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const navigate = useNavigate();\n  let [searchList, setSearchList] = useState([]);\n\n  let fetchSearch = query => {\n    query.preventDefault();\n    let data;\n    axios.get(rooturl + '/api/Search-search/?q=' + query.target.q.value).then(res => {\n      /*#__PURE__*/\n      _jsxDEV(\"nav\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this);\n\n      data = res.data;\n      console.log(data);\n      setSearchList(data);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  let contextData = {\n    searchList: searchList,\n    fetchSearch: fetchSearch\n  };\n  return /*#__PURE__*/_jsxDEV(SearchContext.Provider, {\n    value: contextData,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SearchProvider, \"qh/Xj4aMGQCl9MdUbNJODtbG2kc=\", false, function () {\n  return [useNavigate];\n});\n\n_c = SearchProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchProvider\");","map":{"version":3,"sources":["/mnt/1660E61660E5FC7D/AK360/REACT/Ecom/frontend/src/context/SearchContext.js"],"names":["createContext","useState","useEffect","axios","useNavigate","rooturl","SearchContext","SearchProvider","children","navigate","searchList","setSearchList","fetchSearch","query","preventDefault","data","get","target","q","value","then","res","console","log","catch","err","contextData"],"mappings":";;;AAAA,SACIA,aADJ,EAEIC,QAFJ,EAGIC,SAHJ,QAIO,OAJP;AAKA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,OAAT,QAAwB,oBAAxB;;AAEA,MAAMC,aAAa,gBAAGN,aAAa,EAAnC;AACA,eAAeM,aAAf;AAEA,OAAO,MAAMC,cAAc,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAE5C,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,MAAI,CAACM,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,EAAD,CAA1C;;AAEA,MAAIW,WAAW,GAAEC,KAAD,IAAS;AACrBA,IAAAA,KAAK,CAACC,cAAN;AACA,QAAIC,IAAJ;AACAZ,IAAAA,KAAK,CAACa,GAAN,CAAUX,OAAO,GAAG,wBAAV,GAAmCQ,KAAK,CAACI,MAAN,CAAaC,CAAb,CAAeC,KAA5D,EACCC,IADD,CACMC,GAAG,IAAI;AACT;AAAA;AAAA;AAAA;AAAA;AAAA;;AACAN,MAAAA,IAAI,GAAGM,GAAG,CAACN,IAAX;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;AACAJ,MAAAA,aAAa,CAACI,IAAD,CAAb;AACH,KAND,EAOCS,KAPD,CAOOC,GAAG,IAAI;AACVH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACH,KATD;AAWH,GAdD;;AAgBA,MAAIC,WAAW,GAAG;AACdhB,IAAAA,UAAU,EAAEA,UADE;AAEdE,IAAAA,WAAW,EAACA;AAFE,GAAlB;AAMA,sBACI,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAKc,WAAlC;AAAA,cACGlB;AADH;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAhCM;;GAAMD,c;UAEQH,W;;;KAFRG,c","sourcesContent":["import {\n    createContext,\n    useState,\n    useEffect\n} from \"react\";\nimport axios from 'axios';\nimport { useNavigate } from \"react-router-dom\";\nimport { rooturl } from \"../utils/functions\";\n\nconst SearchContext = createContext()\nexport default SearchContext;\n\nexport const SearchProvider = ({ children }) => {\n\n    const navigate = useNavigate()\n    let [searchList, setSearchList] = useState([])\n\n    let fetchSearch=(query)=>{\n        query.preventDefault()\n        let data;\n        axios.get(rooturl + '/api/Search-search/?q='+query.target.q.value)\n        .then(res => {\n            <nav></nav>\n            data = res.data;\n            console.log(data)\n            setSearchList(data)\n        })\n        .catch(err => {\n            console.log(err)\n        })\n        \n    }\n\n    let contextData = {\n        searchList: searchList,\n        fetchSearch:fetchSearch\n    }\n\n\n    return ( \n        <SearchContext.Provider value = { contextData }>\n          {children } \n        </SearchContext.Provider>\n    )\n}"]},"metadata":{},"sourceType":"module"}