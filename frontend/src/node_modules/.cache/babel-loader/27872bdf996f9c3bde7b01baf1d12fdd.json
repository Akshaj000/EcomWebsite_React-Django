{"ast":null,"code":"var _jsxFileName = \"/mnt/1660E61660E5FC7D/AK360/REACT/React_Todolist/todolist/src/Main/mainpage.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState } from \"react\";\nimport { PropTypes } from \"prop-types\";\nimport Backdrop from \"../components/Backdrop\";\nimport Modal from \"../components/Modal\";\nimport Button from \"../components/button\";\nimport { Carddata } from \"../jsondata/cards\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Page() {\n  _s();\n\n  const mystyle = {\n    padding: \"20px\"\n  };\n  const cardstyle = {\n    \"overflow-y\": \"scroll\",\n    height: \"91.8vh\",\n    margin: \"13px\",\n    padding: \"20px\",\n    \"WebkitFlex\": \"1\",\n    \"msFlex\": \"1\",\n    flex: \"1\"\n  };\n  const [newTask, setNewTask] = useState(false);\n\n  function showNewTaskbox() {\n    setNewTask(true);\n  }\n\n  function AddCard(props) {\n    const buttonstyle = {\n      margin: \"3px\",\n      width: \"60px\",\n      \"WebkitFlex\": \"1\",\n      \"msFlex\": \"1\",\n      flex: \"1\"\n    };\n    const addbtn = {\n      'max-width': '50px',\n      'max-length': '50px',\n      height: '50px',\n      'background-color': 'grey',\n\n      /* Center vertically and horizontally */\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      margin: '-25px 0 0 -25px'\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card text-white mx-3 bg-dark mb-2 box-shadow \",\n      style: buttonstyle,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            style: addbtn,\n            onClick: showNewTaskbox,\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-footer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this);\n  }\n\n  const addbtn = {\n    width: '50px',\n    height: '50px',\n    'background-color': 'grey',\n\n    /* Center vertically and horizontally */\n    top: '50%',\n    left: '50%',\n    margin: '-25px 0 0 -25px',\n    'min-width': '500px',\n    'max-width': '600px'\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      style: cardstyle,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [Carddata.map((data, key) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-3\",\n            id: \"acard\",\n            children: /*#__PURE__*/_jsxDEV(Card\n            /*title={data.name} description={data.description}*/\n            , {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this);\n        }), newTask && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-3\",\n          children: /*#__PURE__*/_jsxDEV(Card, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(AddCard, {\n          className: \"col-md-3\",\n          id: \"newtask\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(Page, \"riYgaqmzeYKwW2LqaS3j/cgEI+M=\");\n\n_c = Page;\n\nfunction Card(props) {\n  const buttonstyle = {\n    margin: \"3px\"\n  };\n  const descriptionstyle = {\n    \"overflow-y\": \"scroll\",\n    height: \"90px\"\n  };\n  const titlestyle = {\n    \"overflow-y\": \"scroll\",\n    height: \"25px\"\n  };\n  const strike = {\n    position: 'absolute',\n    width: '100%',\n    'border-top': '1px solid red',\n    left: 0,\n    top: '50%'\n  };\n\n  function Strike() {\n    {\n      Carddata.map((data, key) => {\n        return document.getElementById(key).style.cssText = 'text-decoration: line-through';\n      });\n    }\n  }\n\n  function strikeIfTrue() {\n    {\n      Carddata.map((data, key) => {\n        if (data.state == true) {\n          /*#__PURE__*/\n          _jsxDEV(\"div\", {\n            className: \"col-md-3\",\n            id: key,\n            children: /*#__PURE__*/_jsxDEV(Strike, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this);\n        }\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card text-white bg-dark mb-3 box-shadow text-decoration-line\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"card-title hidescroll\",\n        style: titlestyle,\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-text hidescroll\",\n        style: descriptionstyle,\n        children: props.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"btn btn-sm btn-success\",\n          onClick: strikeIfTrue,\n          name: \"DONE\",\n          style: buttonstyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"btn btn-sm btn-warning\",\n          name: \"EDIT\",\n          style: buttonstyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"btn btn-sm btn-danger\",\n          name: \"DELETE\",\n          style: buttonstyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 13\n  }, this);\n}\n\n_c2 = Card;\nCard.propTypes = {\n  title: PropTypes.string,\n  aboutText: PropTypes.string\n};\nCard.defaultProps = {\n  title: \"Task Name\",\n  description: \"Task Description\"\n};\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Page\");\n$RefreshReg$(_c2, \"Card\");","map":{"version":3,"sources":["/mnt/1660E61660E5FC7D/AK360/REACT/React_Todolist/todolist/src/Main/mainpage.js"],"names":["React","useState","PropTypes","Backdrop","Modal","Button","Carddata","Page","mystyle","padding","cardstyle","height","margin","flex","newTask","setNewTask","showNewTaskbox","AddCard","props","buttonstyle","width","addbtn","position","top","left","map","data","key","Card","descriptionstyle","titlestyle","strike","Strike","document","getElementById","style","cssText","strikeIfTrue","state","title","description","propTypes","string","aboutText","defaultProps"],"mappings":"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","sourcesContent":["import {React, useState} from \"react\";\nimport { PropTypes } from \"prop-types\";\nimport Backdrop from \"../components/Backdrop\";\nimport Modal from \"../components/Modal\";\nimport Button from \"../components/button\";\nimport { Carddata } from \"../jsondata/cards\";\n\nexport default function Page(){\n\n\n    const mystyle = {\n        padding :\"20px\",\n        \n    }\n    const cardstyle ={\n        \"overflow-y\":\"scroll\",\n        height:\"91.8vh\",\n        margin:\"13px\",\n        padding:\"20px\",\n        \"WebkitFlex\": \"1\",\n        \"msFlex\": \"1\",\n        flex: \"1\",\n\n    }\n\n    const   [newTask, setNewTask] = useState(false);\n\n    function showNewTaskbox(){\n      setNewTask(true);\n    }\n\n    function AddCard(props){\n\n        const buttonstyle ={\n            margin:\"3px\",\n            width:\"60px\",\n            \"WebkitFlex\": \"1\",\n            \"msFlex\": \"1\",\n            flex: \"1\" ,\n\n        }\n        const addbtn = {\n            'max-width': '50px',\n            'max-length': '50px',\n            height: '50px',\n            'background-color': 'grey',\n            /* Center vertically and horizontally */\n            position: 'absolute',\n            top: '50%',\n            left: '50%',\n            margin: '-25px 0 0 -25px',\n\n        }\n    \n        return(\n            <div className=\"card text-white mx-3 bg-dark mb-2 box-shadow \" style={buttonstyle}>\n            <div className=\"card-header\" >\n            </div>\n            <div className=\"card-body\">\n                <div className=\"container\">\n                    <button style={addbtn}  onClick = {showNewTaskbox} >+</button>\n                </div>\n            </div>\n            <div className=\"card-footer\" >\n            {/* {modalIsOpen && <Backdrop onClick = {closeModalHandeler}/>} */}\n            </div>\n        </div>\n    );\n}\n\nconst addbtn = {\n    width: '50px',\n    height: '50px',\n    'background-color': 'grey',\n    /* Center vertically and horizontally */\n    top: '50%',\n    left: '50%',\n    margin: '-25px 0 0 -25px',\n    'min-width': '500px',\n    'max-width': '600px',\n}\n\n    return(\n        <>\n        <div className=\"card\" style={cardstyle}>\n            <div className=\"row\">\n                {Carddata.map((data,key)=>{\n                    return(\n                        <div className=\"col-md-3\" id='acard'>\n                            <Card /*title={data.name} description={data.description}*/ />\n                        </div> \n                    );\n                })}\n                {newTask &&\n                 <div className=\"col-md-3\">\n                    <Card />\n                </div>}\n                <AddCard className=\"col-md-3\" id='newtask'/>\n            </div>\n            \n      </div>\n       \n        </>\n\n    );\n}\n\n\n\n\nfunction Card(props){\n    const buttonstyle ={\n        margin:\"3px\",\n    }\n\n    const  descriptionstyle ={\n        \"overflow-y\":\"scroll\",\n        height:\"90px\",\n\n    }\n\n    const titlestyle={\n        \"overflow-y\":\"scroll\",\n        height:\"25px\",\n    }\n\n    const strike = {\n        position: 'absolute',\n        width: '100%',\n        'border-top': '1px solid red',\n        left: 0,\n        top: '50%'\n    }\n\n\n\nfunction Strike(){\n\n    {Carddata.map((data,key)=>{\n        return(\n            document.getElementById(key).style.cssText = 'text-decoration: line-through'\n        );  \n    })}\n      \n}\n\nfunction strikeIfTrue(){\n\n    {Carddata.map((data,key)=>{\n        if(data.state == true){\n            <div className=\"col-md-3\" id={key}>\n                <Strike />\n            </div> \n        }\n    })}\n}\n    return(\n            <div className=\"card text-white bg-dark mb-3 box-shadow text-decoration-line\">\n                <div className=\"card-header\" >\n                    <h5 className=\"card-title hidescroll\" style={titlestyle}>{props.title}</h5>\n                </div>\n                <div className=\"card-body\">\n                <p className=\"card-text hidescroll\" style={descriptionstyle}>{props.description}</p>\n                </div>\n                <div className=\"card-footer\">\n                <div className=\"row\">\n                    <Button className=\"btn btn-sm btn-success\" onClick = {strikeIfTrue}  name=\"DONE\" style={buttonstyle} />\n                    <Button className=\"btn btn-sm btn-warning\" name=\"EDIT\" style={buttonstyle}/>\n                    <Button className=\"btn btn-sm btn-danger\"   name=\"DELETE\" style={buttonstyle}/>\n                </div>\n                {/* {modalIsOpen && <Backdrop onClick = {closeModalHandeler}/>} */}\n                </div>\n            </div>\n\n    );\n}\n\nCard.propTypes = {title: PropTypes.string,\n    aboutText: PropTypes.string}\n\nCard.defaultProps = {\ntitle: \"Task Name\",\ndescription: \"Task Description\"\n}"]},"metadata":{},"sourceType":"module"}